version: 0.2

phases:
  pre_build:
    commands:
      - echo Installing CI/CD Dependencies...
      - python -m venv venv
      - source venv/bin/activate
      - pip3 install --upgrade pip setuptools wheel
      - pip3 install -r requirements.txt
      - echo ________________________________

      - echo Linting with Black...
      - black --check --diff lambda_function/
      - echo ________________________________
      
      - echo Linting with Flake...
      - flake8 --count --max-line-length 100 lambda_function/
      - echo ________________________________

      - echo Running Tests...
      - pytest tests --cov=lambda_function/ --cov-report=term --log-cli-level=INFO
    
  build:
    commands:
      - REGION=us-east-1
      - echo Login to Private ECR $REGION
      - aws ecr get-login-password --region $REGION | docker login --username AWS --password-stdin 351967858401.dkr.ecr.$REGION.amazonaws.com
      - echo ________________________________
      - ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
      - if [ "$CODEBUILD_WEBHOOK_EVENT" = "PUSH" ]; then
          ECR_REPO="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/dev_sdc_aws_processing_lambda"
          CDK_ENVIRONMENT=DEVELOPMENT
        else
          ECR_REPO="$ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/sdc_aws_processing_lambda"
          CDK_ENVIRONMENT=DEVELOPMENT
        fi
      
      - VERSION=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | grep -oP 'refs/tags/\K.*')
      - if [ -z "$VERSION" ]; then
          VERSION=$(date +%Y-%m-%d-%H-%M-%S)
        else
          echo "Release version: $VERSION"
        fi
      - echo ________________________________

      - echo Build Docker Image
      - docker build -t $ECR_REPO:latest .

      - echo Tagging Docker Image...
      - docker tag $ECR_REPO:latest $ECR_REPO:$VERSION

      - echo Pushing the Docker image with Tags...
      - docker push $ECR_REPO:latest
      - docker push $ECR_REPO:$VERSION
      - echo ________________________________

      - echo Updating Deployment
      - aws codebuild start-build --project-name build_sdc_aws_pipeline_architecture --region us-east-2 --environment-variables-override name=LAMBDA_PIPELINE,value=PROCESSING,type=PLAINTEXT name=TAG,value=$VERSION,type=PLAINTEXT, name=CDK_ENVIRONMENT,value=$CDK_ENVIRONMENT,type=PLAINTEXT
      - echo ________________________________

  post_build:
    commands:
      - echo Build Successful - Lambda Successfully Built and Pushed to ECR